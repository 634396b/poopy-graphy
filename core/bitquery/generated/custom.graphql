query TradingAmount(
  $address: String
  $quoteAddress: String #"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  $from: ISO8601DateTime
  $till: ISO8601DateTime
  $minTradeUsd: Float
  $exchanges: [String!]
  $intervalMinutes: Int
) {
  ethereum(network: bsc) {
    dexTrades(
      options: { asc: "timeInterval.minute" }
      date: { since: $from, till: $till }
      exchangeAddress: { in: $exchanges }
      baseCurrency: { is: $address }
      quoteCurrency: { is: $quoteAddress } # WBNB
      tradeAmountUsd: { gt: $minTradeUsd }
    ) {
      timeInterval {
        minute(count: $intervalMinutes, format: "%Y-%m-%dT%H:%M:%SZ")
      }
      baseCurrency {
        symbol
        address
      }
      quoteCurrency {
        symbol
        address
      }

      tradeAmount(in: USD)
      trades: count
      quotePrice
      maximum_price: quotePrice(calculate: maximum)
      minimum_price: quotePrice(calculate: minimum)
      open_price: minimum(of: block, get: quote_price)
      close_price: maximum(of: block, get: quote_price)
    }
  }
}

query PaperHands($minTradeUsd: Float, $since: ISO8601DateTime, $contract: String, $limit: Int) {
  ethereum(network: bsc) {
    dexTrades(
      options: {limit: $limit, desc: "tradeAmount"}
      date: {since: $since}
      tradeAmountUsd: {gt: $minTradeUsd}
      baseCurrency: {is: $contract}
    ) {
      transaction {
        index
        hash
        txFrom {
          address
        }
      }
      block {
        height
      }
      tradeIndex
      date {
        date(format: "%Y-%m-%dT%H:%M:%SZ")
      }
      buyAmount
      buyAmountInUsd: buyAmount(in: USD)
      buyCurrency {
        symbol
      }
      sellAmount
      sellCurrency {
        symbol
      }
      sellAmountInUsd: sellAmount(in: USD)
      tradeAmount(in: USD)
    }
  }
}



query WalletCurrency
{
  ethereum(network: bsc) {
    address(address: {is: "0x6257d93ABdb970f1cB35EcB872CF9b13AE0d0459"}) {
      balances {
        currency{
          address
          name
          symbol
        }
        value
      }
    }
  }
}
